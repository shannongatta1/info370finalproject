View(test)
rm(test)
# Make histograms for each risk column
reshaped <- risk.data %>%
gather(risk, value, alcohol_use:smoking)
ggplot(data=reshaped, aes(chol$risk)) +
geom_histogram()
# Make histograms for each risk column
reshaped <- risk.data %>%
gather(risk, value, alcohol_use:smoking)
ggplot(data=reshaped, aes(reshaped$risk)) +
geom_histogram()
# Make histograms for each risk column
reshaped <- risk.data %>%
gather(risk, value, alcohol_use:smoking)
ggplot(data=reshaped, aes(x=reshaped$risk, y=count())) +
geom_histogram()
# Make histograms for each risk column
reshaped <- risk.data %>%
gather(risk, value, alcohol_use:smoking)
ggplot(data=reshaped, aes(reshaped$risk)) +
geom_bar()
# Make histograms for each risk column
reshaped <- risk.data %>%
gather(risk, value, alcohol_use:smoking)
ggplot(data=reshaped, aes(reshaped$risk)) +
geom_histogram()
# Make histograms for each risk column
reshaped <- risk.data %>%
gather(risk, value, alcohol_use:smoking)
ggplot(data=reshaped, aes(reshaped$risk)) +
geom_histogram(binwidth=0.5)
# Make histograms for each risk column
reshaped <- risk.data %>%
gather(risk, value, alcohol_use:smoking)
ggplot(data=reshaped, aes(reshaped$risk)) +
geom_histogram(aes(y=count))
# Make histograms for each risk column
reshaped <- risk.data %>%
gather(risk, value, alcohol_use:smoking)
ggplot(data=reshaped, aes(reshaped$value)) +
geom_histogram()
# Make histograms for each risk column
reshaped <- risk.data %>%
gather(risk, value, alcohol_use:smoking)
ggplot(data=reshaped, aes(reshaped$value)) +
geom_histogram() +
facet_wrap(~risk)
# testing area
ggplot(data=reshaped, aes(reshaped$value)) +
geom_histogram() +
facet_wrap(~age)
# testing area
ggplot(data=risk.data, aes(reshaped$smoking)) +
geom_histogram() +
facet_wrap(~age)
# testing area
ggplot(data=risk.data, aes(risk.data$smoking)) +
geom_histogram() +
facet_wrap(~age)
# testing area
univariate_age_group <- function(risk) {
ggplot(data=risk.data, aes(risk.data[smoking])) +
geom_histogram() +
facet_wrap(~age)
}
# testing area
univariate_age_group <- function(risk) {
ggplot(data=risk.data, aes(risk.data[smoking])) +
geom_histogram() +
facet_wrap(~age)
}
# testing area
univariate_age_group <- function(risk) {
ggplot(data=risk.data, aes(risk.data$smoking)) +
geom_histogram() +
facet_wrap(~age)
}
# testing area
ggplot(data=risk.data, aes(risk.data$smoking)) +
geom_histogram() +
facet_wrap(~age)
# testing area
ggplot(data=risk.data, aes(risk.data[smoking])) +
geom_histogram() +
facet_wrap(~age)
# testing area
ggplot(data=risk.data, aes(risk.data[,smoking])) +
geom_histogram() +
facet_wrap(~age)
# testing area
ggplot(data=risk.data, aes(risk.data[[smoking])) +
# testing area
ggplot(data=risk.data, aes(risk.data[[smoking]) +
# testing area
ggplot(data=risk.data, aes(risk.data[[smoking])) +
# testing area
ggplot(data=risk.data, aes(risk.data[[smoking]])) +
geom_histogram() +
facet_wrap(~age)
# testing area
risk <- 'smoking'
ggplot(data=risk.data, aes(risk.data$get(risk))) +
geom_histogram() +
facet_wrap(~age)
# testing area
risk <- 'smoking'
ggplot(data=risk.data, aes(risk.data${risk})) +
# testing area
risk <- 'smoking'
ggplot(data=risk.data, aes(risk.data[[risk]])) +
geom_histogram() +
facet_wrap(~age)
# testing area
risk <- 'alcohol_use'
ggplot(data=risk.data, aes(risk.data[[risk]])) +
geom_histogram() +
facet_wrap(~age)
# Write your function here
univariate_age_group <- function(risk) {
return(ggplot(data=risk.data, aes(risk.data[[risk]])) +
geom_histogram() +
facet_wrap(~age))
}
# Create a plot to demonstrate that it works
univariate_age_group('smoking')
# Set up (install packages if you don't have them)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
risk.data <- read.csv('./data/prepped/risk-data.csv', stringsAsFactors = FALSE)
dat <- data.frame(xx = c(runif(100,20,50),runif(100,40,80),runif(100,0,30)),yy = rep(letters[1:3],each = 100))
ggplot(dat,aes(x=xx)) +
geom_histogram(data=subset(dat,yy == 'a'),fill = "red", alpha = 0.2) +
geom_histogram(data=subset(dat,yy == 'b'),fill = "blue", alpha = 0.2) +
geom_histogram(data=subset(dat,yy == 'c'),fill = "green", alpha = 0.2)
View(dat)
age_groups
# Code goes here
# Size
size <- dim(risk.data)
# Countries
num_countries <- length(unique(risk.data[["country"]]))
# Age groups
age_groups <- unique(risk.data[["age"]])
# Variables (columns)
variables <- colnames(risk.data)
# Data type
data_types <- sapply(risk.data, class)
# Summary
summary <- summary(risk.data)
age_groups
age_groups[0]
age_groups[1]
# testing area
risk <- 'alcohol_use'
ggplot(data=risk.data, aes(x=risk.data[[risk]])) +
geom_histogram(data=subset(risk.data,age==age_groups[1]),fill = "red", alpha = 0.2) +
geom_histogram(data=subset(risk.data,age==age_groups[2]),fill = "red", alpha = 0.2) +
# testing area
risk <- 'alcohol_use'
ggplot(data=risk.data, aes(x=risk.data[[risk]])) +
geom_histogram(data=subset(risk.data,age==age_groups[1]),fill = "red", alpha = 0.2) +
geom_histogram(data=subset(risk.data,age==age_groups[2]),fill = "red", alpha = 0.2)
# testing area
risk <- 'alcohol_use'
ggplot(data=risk.data, aes(x=risk.data[[risk]])) +
geom_histogram(data=subset(risk.data,age==age_groups[1]),fill = "red", alpha = 0.2) +
geom_histogram(data=subset(risk.data,age==age_groups[2]),fill = "red", alpha = 0.2)
# testing area
risk <- 'alcohol_use'
ggplot(data=risk.data, aes(x=risk.data[[risk]])) +
geom_histogram(data=subset(risk.data,sex=='male'),fill = "red", alpha = 0.2) +
geom_histogram(data=subset(risk.data,sex=='female'),fill = "blue", alpha = 0.2)
# testing area
risk <- 'alcohol_use'
ggplot(risk.data, aes(x=risk.data[[risk]])) +
geom_histogram(data=subset(risk.data,sex=='male'),fill = "red", alpha = 0.2) +
geom_histogram(data=subset(risk.data,sex=='female'),fill = "blue", alpha = 0.2)
risk.data['smoking'].count()
risk.data$smoking.count()
risk.data$smoking
# testing area
risk <- 'alcohol_use'
ggplot(data=risk.data, aes(risk.data[[risk]])) +
geom_histogram() +
facet_wrap(~sex))
# testing area
risk <- 'alcohol_use'
ggplot(data=risk.data, aes(risk.data[[risk]])) +
geom_histogram() +
facet_wrap(~sex)
ggplot(risk.data, aes(x=risk.data[[risk]])) +
geom_histogram(data=subset(risk.data,sex=='male'),fill = "red", alpha = 0.2) +
geom_histogram(data=subset(risk.data,sex=='female'),fill = "blue", alpha = 0.2)
# testing area
risk <- 'alcohol_use'
ggplot(data=risk.data, aes(risk.data[[risk]])) +
geom_histogram(fill=sex)
# testing area
risk <- 'alcohol_use'
ggplot(data=risk.data, aes(x = risk.data[[risk]], fill=sex)) +
geom_histogram()
ggplot(risk.data, aes(x=risk.data[[risk]])) +
geom_histogram(data=subset(risk.data,sex=='male'),fill = "red", alpha = 0.2) +
geom_histogram(data=subset(risk.data,sex=='female'),fill = "blue", alpha = 0.2)
# testing area
risk <- 'alcohol_use'
ggplot(data=risk.data, aes(x = risk.data[[risk]], fill=sex, alpha = 0.2)) +
geom_histogram()
ggplot(risk.data, aes(x=risk.data[[risk]])) +
geom_histogram(data=subset(risk.data,sex=='male'),fill = "red", alpha = 0.2) +
geom_histogram(data=subset(risk.data,sex=='female'),fill = "blue", alpha = 0.2)
# testing area
risk <- 'alcohol_use'
# Write your function here
univariate_sex <- function(risk) {
return(ggplot(data=risk.data, aes(x = risk.data[[risk]], fill=sex, alpha = 0.2)) +
geom_histogram())
}
# Create plot to demonstrate that it works
univariate_sex('alcohol_use')
# Create your scatterplot matrix here
pairs(iris[,"alcohol_use":"smoking"])
# Create your scatterplot matrix here
pairs(risk.data[,"alcohol_use":"smoking"])
# Create your scatterplot matrix here
pairs(risk.data.na.omit()[,"alcohol_use":"smoking"])
# Create your scatterplot matrix here
pairs(risk.data[,"alcohol_use":"smoking"])
# Create your scatterplot matrix here
pairs(risk.data[,"alcohol_use":"smoking"])
# Create your scatterplot matrix here
plotmatrix(risk.data[,"alcohol_use":"smoking"])
# Create your scatterplot matrix here
test <- na.omit(risk.data)
plotmatrix(risk.data[,"alcohol_use":"smoking"])
View(test)
# Create your scatterplot matrix here
test <- na.omit(risk.data)
plotmatrix(test[,"alcohol_use":"smoking"])
# Create your scatterplot matrix here
test <- na.omit(risk.data)
pairs(test[,"alcohol_use":"smoking"])
# Create your scatterplot matrix here
test <- na.omit(risk.data)
pairs(test[,"alcohol_use":"smoking"])
# Create your scatterplot matrix here
test <- na.omit(risk.data)
pairs(test[,8:10])
# Create your scatterplot matrix here
test <- na.omit(risk.data)
pairs(risk.data[,8:10])
# Create your scatterplot matrix here
test <- na.omit(risk.data)
pairs(risk.data[,8:10], alpha=00.2)
# Create your scatterplot matrix here
test <- na.omit(risk.data)
pairs(risk.data[,8:10], col=risk.data$country)
# Create your scatterplot matrix here
test <- na.omit(risk.data)
pairs(risk.data[,8:10], col=risk.data$sex)
# Create your scatterplot matrix here
test <- na.omit(risk.data)
pairs(risk.data[,8:10], col=['black', 'red'])
# Create your scatterplot matrix here
test <- na.omit(risk.data)
pairs(risk.data[,8:10], col=c('black', 'red'))
# Create your scatterplot matrix here
test <- na.omit(risk.data)
pairs(risk.data[,8:12], col=c('black', 'red'))
rm(test)
# Create your scatterplot matrix here
install.packages("GGally")
library(GGally)
test <- na.omit(risk.data)
ggpairs(risk.data, columns = 8:12)
ggpairs(risk.data, columns = 8:12, axisLabels = "show", columnLabels = colnames(data[, columns]))
ggpairs(risk.data, columns = 8:12)
pairs(risk.data[,8:12])
ggpairs(risk.data, columns = 8:12)
pairs(risk.data[,8:12])
ggpairs(risk.data, columns = 8:12)
univariate_age_group <- function(risk) {
return(ggplot(data=risk.data, aes(risk.data[[risk]])) +
geom_histogram() +
facet_wrap(~age))
}
# Write your function here
univariate_age_group <- function(risk) {
return(ggplot(data=risk.data, aes(risk.data[[risk]])) +
geom_histogram() +
facet_wrap(~age))
}
# Create a plot to demonstrate that it works
univariate_age_group('drug_use')
# Write your function here
univariate_age_group <- function(risk) {
return(ggplot(data=risk.data, aes(risk.data[[risk]])) +
geom_histogram() +
facet_wrap(~age)) +
labs(x = risk)
}
# Create a plot to demonstrate that it works
univariate_age_group('drug_use')
# Write your function here
univariate_age_group <- function(risk) {
return(ggplot(data=risk.data, aes(risk.data[[risk]])) +
geom_histogram() +
facet_wrap(~age))
}
# Create a plot to demonstrate that it works
univariate_age_group('drug_use')
# Write your function here
univariate_age_group <- function(risk) {
return(ggplot(data=risk.data, aes(risk.data[[risk]])) +
geom_histogram() +
facet_wrap(~age)) +
ggtitle(risk)
}
# Create a plot to demonstrate that it works
univariate_age_group('drug_use')
# Write your function here
univariate_age_group <- function(risk) {
return(ggplot(data=risk.data, aes(risk.data[[risk]])) +
geom_histogram() +
facet_wrap(~age)) +
ggtitle("test")
}
# Create a plot to demonstrate that it works
univariate_age_group('drug_use')
# Write your function here
univariate_age_group <- function(risk) {
return(ggplot(data=risk.data, aes(risk.data[[risk]])) +
geom_histogram() +
facet_wrap(~age) +
ggtitle("test"))
}
# Create a plot to demonstrate that it works
univariate_age_group('drug_use')
# Write your function here
univariate_age_group <- function(risk) {
return(ggplot(data=risk.data, aes(risk.data[[risk]])) +
geom_histogram() +
facet_wrap(~age) +
ggtitle(risk))
}
# Create a plot to demonstrate that it works
univariate_age_group('drug_use')
# Write your function here
univariate_sex <- function(risk) {
return(ggplot(data=risk.data, aes(x = risk.data[[risk]], fill=sex, alpha = 0.2)) +
geom_histogram() +
ggtitle(risk))
}
# Create plot to demonstrate that it works
univariate_sex('alcohol_use')
# Write your function here
univariate_sex <- function(risk) {
return(ggplot(data=risk.data, aes(x = risk.data[[risk]], fill=sex, alpha = 0.2)) +
geom_histogram() +
ggtitle(risk))
}
# Create plot to demonstrate that it works
univariate_sex('high_meat')
# Create your scatterplot matrix here
#install.packages("GGally")
#library(GGally)
#test <- na.omit(risk.data)
#ggpairs(risk.data, columns = 8:12)
pairs(risk.data[,8:12])
# Set up (install packages if you don't have them)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
risk.data <- read.csv('./data/prepped/risk-data.csv', stringsAsFactors = FALSE)
# Size
size <- dim(risk.data)
# Countries
num_countries <- length(unique(risk.data[["country"]]))
# Age groups
age_groups <- unique(risk.data[["age"]])
# Variables (columns)
variables <- colnames(risk.data)
# Data type
data_types <- sapply(risk.data, class)
# Summary
summary <- summary(risk.data)
# Make histograms for each risk column
reshaped <- risk.data %>%
gather(risk, value, alcohol_use:smoking)
ggplot(data=reshaped, aes(reshaped$value)) +
geom_histogram() +
facet_wrap(~risk)
# Write your function here
univariate_age_group <- function(risk) {
return(ggplot(data=risk.data, aes(risk.data[[risk]])) +
geom_histogram() +
facet_wrap(~age) +
ggtitle(risk))
}
# Create a plot to demonstrate that it works
univariate_age_group('drug_use')
# Write your function here
univariate_sex <- function(risk) {
return(ggplot(data=risk.data, aes(x = risk.data[[risk]], fill=sex, alpha = 0.2)) +
geom_histogram() +
ggtitle(risk))
}
# Create plot to demonstrate that it works
univariate_sex('high_meat')
pairs(risk.data[,8:12])
# Set up (install packages if you don't have them)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
library(knitr)
risk.data <- read.csv('./data/prepped/risk-data.csv', stringsAsFactors = FALSE)
# Set up (install packages if you don't have them)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
risk.data <- read.csv('./data/prepped/risk-data.csv', stringsAsFactors = FALSE)
rm(list=ls())
install(sandwich)
install('sandwich')
install.packages('sandwich')
install.packages('msm')
library(ggplot2)
library(sandwich)
find(sandwich)
install.packages('sandwich')
install.packages('zoo')
install.packages('sandwich')
install.packages('msm')
install.packages('msm')
library(msm)
library(ggplot2)
library(sandwich)
library(msm)
p <- read.csv("https://stats.idre.ucla.edu/stat/data/poisson_sim.csv")
p <- within(p, {
prog <- factor(prog, levels=1:3, labels=c("General", "Academic",
"Vocational"))
id <- factor(id)
})
summary(p)
# Set up code block -- don't print ("include") results.
# This is a good place to load data / packages
library(ggplot2)
library(sandwich)
library(msm)
# **Read** the poisson.pdf overview, then
# implement the Poisson regression described in this tutorial:
# https://stats.idre.ucla.edu/r/dae/poisson-regression/
# You should **copy and paste** code from that tutorial (or accomplish
# the same ends using different code, if you prefer).
# Make sure to **add markdown annotation** describing what your code does,
# and how you can interpret the results.
p <- read.csv("https://stats.idre.ucla.edu/stat/data/poisson_sim.csv")
p <- within(p, {
prog <- factor(prog, levels=1:3, labels=c("General", "Academic",
"Vocational"))
id <- factor(id)
})
summary(p)
p
with(p, tapply(num_awards, prog, function(x) {
sprintf("M (SD) = %1.2f (%1.2f)", mean(x), sd(x))
}))
ggplot(p, aes(num_awards, fill = prog)) +
geom_histogram(binwidth=.5, position="dodge")
with(p, tapply(num_awards, prog, function(x) {
sprintf("M (SD) = %1.2f (%1.2f)", mean(x), sd(x))
}))
ggplot(p, aes(num_awards, fill = prog)) +
geom_histogram(binwidth=.5, position="dodge")
summary(m1 <- glm(num_awards ~ prog + math, family="poisson", data=p))
cov.m1 <- vcovHC(m1, type="HC0")
std.err <- sqrt(diag(cov.m1))
r.est <- cbind(Estimate= coef(m1), "Robust SE" = std.err,
"Pr(>|z|)" = 2 * pnorm(abs(coef(m1)/std.err), lower.tail=FALSE),
LL = coef(m1) - 1.96 * std.err,
UL = coef(m1) + 1.96 * std.err)
r.est
summary(m1 <- glm(num_awards ~ prog + math, family="poisson", data=p))
p <- read.csv("https://stats.idre.ucla.edu/stat/data/poisson_sim.csv")
p <- within(p, {
prog <- factor(prog, levels=1:3, labels=c("General", "Academic",
"Vocational"))
id <- factor(id)
})
summary(p)
p$phat <- predict(m1, type="response")
## order by program and then by math
p <- p[with(p, order(prog, math)), ]
## create the plot
ggplot(p, aes(x = math, y = phat, colour = prog)) +
geom_point(aes(y = num_awards), alpha=.5, position=position_jitter(h=.2)) +
geom_line(size = 1) +
labs(x = "Math Score", y = "Expected number of awards")
install.packages('tidyverse')
install.packages("tidyverse")
rm(list=ls())
setwd("~/Documents/UW/2018-2019/A'18/INFO 370A/info370finalproject")
dems <- read.csv('./data/dem_candidates_prepped.csv', stringsAsFactors = FALSE)
View(dems)
library(ggplot2)
