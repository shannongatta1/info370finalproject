# stacked bar charts
data$Race <- factor(data$Race) # Create a categorical variable
data$Primary.Status <- factor(data$Primary.Status) # Create categorical variable
status_race_stacked <- ggplot(data%>% count(Primary.Status, Race) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Primary.Status, n, fill=Race)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
race_status_stacked <- ggplot(data%>% count(Race, Primary.Status) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Race, n, fill=Primary.Status)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
library(ggplot2)
library(dplyr)
library(scales)
data <- read.csv('../data/dem_candidates_prepped.csv', stringsAsFactors = FALSE)
#Race
white_can <- data %>% filter(Race == 'White')
non_white_can <- data %>% filter(Race == 'Nonwhite')
race <- data.frame(race=c("White", "Nonwhite"),
value=c(nrow(white_can), nrow(non_white_can)))
ggplot(data=race, aes(x=race, y=value, fill=race)) +
geom_bar(stat="identity")
#pie chart
piechart<- ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(white_can)+nrow(non_white_can)))), size=5)
#success vs race
white_can_success <- data %>% filter(Race == 'White') %>% filter(Primary.Status == "Advanced")
non_white_can_success <- data %>% filter(Race == 'Nonwhite') %>% filter(Primary.Status == "Advanced")
race_success <- data.frame(race=c("White", "Nonwhite"),
value=c(nrow(white_can_success), nrow(non_white_can_success)))
success_pie<- ggplot(race_success, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(white_can_success)+nrow(non_white_can_success)))), size=5)
# stacked bar charts
data$Race <- factor(data$Race) # Create a categorical variable
data$Primary.Status <- factor(data$Primary.Status) # Create categorical variable
status_race_stacked <- ggplot(data%>% count(Primary.Status, Race) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Primary.Status, n, fill=Race)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
race_status_stacked <- ggplot(data%>% count(Race, Primary.Status) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Race, n, fill=Primary.Status)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
ggplot(data%>% count(Race, Primary.Status) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Race, n, fill=Primary.Status)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
ggplot(race_success, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(white_can_success)+nrow(non_white_can_success)))), size=5)
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(white_can)+nrow(non_white_can)))), size=5)
ggplot(data%>% count(Primary.Status, Race) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Primary.Status, n, fill=Race)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
library(ggplot2)
library(dplyr)
library(scales)
data <- read.csv('../data/dem_candidates_prepped.csv', stringsAsFactors = FALSE)
#Race
white_can <- data %>% filter(Race == 'White')
non_white_can <- data %>% filter(Race == 'Nonwhite')
unknown_can <- data %>% filter(Race == 'Unknown')
race <- data.frame(race=c("White", "Nonwhite", "Unknown"),
value=c(nrow(white_can), nrow(non_white_can), nrow(unknown_can)))
#pie chart
race_proportions<- ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(white_can)+nrow(non_white_can)))), size=5)
# stacked bar charts
data$Race <- factor(data$Race) # Create a categorical variable
data$Primary.Status <- factor(data$Primary.Status) # Create categorical variable
status_race_stacked <- ggplot(data%>% count(Primary.Status, Race) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Primary.Status, n, fill=Race)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
race_status_stacked <- ggplot(data%>% count(Race, Primary.Status) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Race, n, fill=Primary.Status)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(white_can)+nrow(non_white_can)))), size=5)
ggplot(data%>% count(Primary.Status, Race) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Primary.Status, n, fill=Race)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
ggplot(data%>% count(Race, Primary.Status) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Race, n, fill=Primary.Status)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
advanced <- data %>% filter(Primary.Status == 'Advanced')
lost <- data %>% filter(Primary.Status == 'Lost')
advanced/lost
advanced <- data %>% filter(Primary.Status == 'Advanced')
lost <- data %>% filter(Primary.Status == 'Lost')
advanced/lost
nrow(advanced)/nrow(lost)
nrow(advanced)/(nrow(advanced)+nrow(lost))
percent_advanced <- nrow(advanced)/(nrow(advanced)+nrow(lost)) * 100
percent_advanced
ggplot(data%>% count(Primary.Status, Race) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Primary.Status, n, fill=Race)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
library(ggplot2)
library(dplyr)
library(scales)
data <- read.csv('../data/dem_candidates_prepped.csv', stringsAsFactors = FALSE)
#Race
white_can <- data %>% filter(Race == 'White')
non_white_can <- data %>% filter(Race == 'Nonwhite')
unknown_can <- data %>% filter(Race == 'Unknown')
advanced <- data %>% filter(Primary.Status == 'Advanced')
lost <- data %>% filter(Primary.Status == 'Lost')
race <- data.frame(race=c("White", "Nonwhite", "Unknown"),
value=c(nrow(white_can), nrow(non_white_can), nrow(unknown_can)))
# 32% of the candidate advanced
percent_advanced <- nrow(advanced)/(nrow(advanced)+nrow(lost)) * 100
#pie chart
race_proportions<- ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(white_can)+nrow(non_white_can)))), size=5)
# stacked bar charts
data$Race <- factor(data$Race) # Create a categorical variable
data$Primary.Status <- factor(data$Primary.Status) # Create categorical variable
status_race_stacked <- ggplot(data%>% count(Primary.Status, Race) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Primary.Status, n, fill=Race)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
race_status_stacked <- ggplot(data%>% count(Race, Primary.Status) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Race, n, fill=Primary.Status)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(white_can)+nrow(non_white_can)))), size=5)
ggplot(data%>% count(Primary.Status, Race) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Primary.Status, n, fill=Race)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
ggplot(data%>% count(Race, Primary.Status) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Race, n, fill=Primary.Status)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
percent_advanced <- nrow(advanced)/nrow(data) * 100
percent_advanced
percent_advanced <- nrow(advanced)/(nrow(advanced)+nrow(lost)) * 100
percent_advanced
.32(50) + .32(25) + 32.(25)
.32x50
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(white_can)+nrow(non_white_can)))), size=5)
ggplot(data%>% count(Primary.Status, Race) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Primary.Status, n, fill=Race)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(white_can)+nrow(non_white_can)))), size=5)
ggplot(data%>% count(Primary.Status, Race) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Primary.Status, n, fill=Race)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
ggplot(data%>% count(Primary.Status, Race) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Primary.Status, n, fill=Race)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(white_can)+nrow(non_white_can)))), size=5)
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(data))), size=5)
race <- data.frame(race=c("White", "Nonwhite", "Unknown"),
value=c(nrow(white_can), nrow(non_white_can), nrow(unknown_can)))
library(ggplot2)
library(dplyr)
library(scales)
data <- read.csv('../data/dem_candidates_prepped.csv', stringsAsFactors = FALSE)
#Race
white_can <- data %>% filter(Race == 'White')
non_white_can <- data %>% filter(Race == 'Nonwhite')
unknown_can <- data %>% filter(Race == 'Unknown')
advanced <- data %>% filter(Primary.Status == 'Advanced')
lost <- data %>% filter(Primary.Status == 'Lost')
race <- data.frame(race=c("White", "Nonwhite", "Unknown"),
value=c(nrow(white_can), nrow(non_white_can), nrow(unknown_can)))
# 32% of the candidate advanced
percent_advanced <- nrow(advanced)/(nrow(advanced)+nrow(lost)) * 100
#pie chart
race_proportions<- ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(data))), size=5)
# stacked bar charts
data$Race <- factor(data$Race) # Create a categorical variable
data$Primary.Status <- factor(data$Primary.Status) # Create categorical variable
status_race_stacked <- ggplot(data%>% count(Primary.Status, Race) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Primary.Status, n, fill=Race)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
race_status_stacked <- ggplot(data%>% count(Race, Primary.Status) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Race, n, fill=Primary.Status)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
race <- data.frame(race=c("White", "Nonwhite", "Unknown"),
value=c(nrow(white_can), nrow(non_white_can), nrow(unknown_can)))
race_proportions<- ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(data))), size=5)
race_proportions
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(data)), size=5)
race_proportions<- ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(data)), size=5)
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(data)), size=5)
race_proportions<- ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(data))), size=5)
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(data))), size=5)
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(white_can))), size=5)
race <- data.frame(race=c("White", "Nonwhite", "Unknown"),
value=c(nrow(white_can), nrow(non_white_can), nrow(unknown_can)))
race <- data.frame(race=c("White", "Nonwhite", "Unknown"),
value=c(nrow(white_can), nrow(non_white_can), nrow(unknown_can))
race
race <- data.frame(race=c("White", "Nonwhite", "Unknown"), value=c(nrow(white_can), nrow(non_white_can), nrow(unknown_can)))
race
- ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(white_can))), size=5)
race_proportions<- ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]),
label = percent(value/(nrow(white_can))), size=5)
race_proportions
race_proportions<- ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]), label = percent(value/(nrow(white_can))), size=5)
race_proportions
race_proportions<- ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = value/2 + c(0, cumsum(value)[-length(value)]), label = percent(value/(nrow(white_can))), size=5)
race_proportions
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) + geom_text(aes(y = value/2 + c(0, cumsum(value)[-length(value)]), label = percent(value/(nrow(white_can))), size=5)
race_proportions<- ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) + geom_text(aes(y = value/2 + c(0, cumsum(value)[-length(value)]), label = percent(value/(nrow(white_can))), size=5)
ggplot(race, aes(x="", y=value, fill=race)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) + geom_text(aes(y = value/2 + c(0, cumsum(value)[-length(value)]), label = percent(value/nrow(white_can)), size=5)
race_proportions<- ggplot(race, aes(x="", y=value, fill=race)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) + geom_text(aes(y = value/2 + c(0, cumsum(value)[-length(value)]), label = percent(value/nrow(white_can)), size=5)
ggplot(race, aes(x="", y=value, fill=race)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) + geom_text(aes(y = value/2 + c(0, cumsum(value)[-length(value)]), label = percent(value/nrow(data)), size=5)
race_proportions<- ggplot(race, aes(x="", y=value, fill=race)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) + geom_text(aes(y = value/2 + c(0, cumsum(value)[-length(value)]), label = percent(value/nrow(data)), size=5)
ggplot(race, aes(x="", y=value, fill=race)) +
geom_bar(width = 1, stat = "identity")
race_proportions<- ggplot(race, aes(x="", y=value, fill=race)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0) + geom_text(aes(y = value/2 + c(0, cumsum(value)[-length(value)]), label = percent(value/nrow(data)), size=5)
race_proportions
race_proportions <- ggplot(race, aes(x="", y=value, fill=race)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0) + geom_text(aes(y = value/2 + c(0, cumsum(value)[-length(value)]), label = percent(value/nrow(data)), size=5)
race_proportions
ggplot(race, aes(x="", y=value, fill=race)) + geom_bar(width = 1, stat = "identity"
ggplot(race, aes(x="", y=value, fill=race)) + geom_bar(width = 1, stat = "identity")
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity")
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0) + geom_text(aes(y = value/2 + c(0, cumsum(value)[-length(value)]), label = percent(value/nrow(data)), size=5)
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0) + geom_text(aes(y = value/2 + c(0, cumsum(value)[-length(value)]), label = percent(value/nrow(data)), size=5)
# stacked bar charts
data$Race <- factor(data$Race) # Create a categorical variable
data$Primary.Status <- factor(data$Primary.Status) # Create categorical variable
status_race_stacked <- ggplot(data%>% count(Primary.Status, Race) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Primary.Status, n, fill=Race)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
race_status_stacked <- ggplot(data%>% count(Race, Primary.Status) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Race, n, fill=Primary.Status)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0) + geom_text(aes(y = value/2 + c(0, cumsum(value)[-length(value)]), label = percent(value/nrow(data)), size=5)
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0)+
geom_text(aes(y = value/2 + c(0, cumsum(value)[-length(value)]), label = percent(value/nrow(data)), size=5)
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0)+
geom_text(aes(y = value/2 + c(0, cumsum(value)[-length(value)]), label = percent(value/nrow(data)), size=5)
# stacked bar charts
data$Race <- factor(data$Race) # Create a categorical variable
data$Primary.Status <- factor(data$Primary.Status) # Create categorical variable
status_race_stacked <- ggplot(data%>% count(Primary.Status, Race) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Primary.Status, n, fill=Race)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
race_status_stacked <- ggplot(data%>% count(Race, Primary.Status) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Race, n, fill=Primary.Status)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity")
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0)
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0)+
geom_text(aes(y = value/2 + c(0, cumsum(value)[-length(value)]), label = percent(value/nrow(data)), size=5)
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0)
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0)
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]), label = percent(value/(nrow(white_can)+nrow(non_white_can)))), size=5)
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]), label = percent(value/(nrow(white_can)+nrow(non_white_can)+nrow(unknown_can)))), size=5)
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]), label = percent(value/(nrow(white_can)+nrow(non_white_can)+nrow(unknown_can)))), size=5))
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]), label = percent(value/(nrow(white_can)+nrow(non_white_can)+nrow(unknown_can)))), size=5)
ggplot(data%>% count(Primary.Status, Race) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Primary.Status, n, fill=Race)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
ggplot(data%>% count(Race, Primary.Status) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Race, n, fill=Primary.Status)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
percent_advanced <- nrow(advanced)/(nrow(advanced)+nrow(lost)) * 100
ggplot(race, aes(x="", y=value, fill=race))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0) +
geom_text(aes(y = value/2 +
c(0, cumsum(value)[-length(value)]), label = percent(value/(nrow(white_can)+nrow(non_white_can)+nrow(unknown_can)))), size=5)
ggplot(data%>% count(Primary.Status, Race) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Primary.Status, n, fill=Race)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
ggplot(data%>% count(Race, Primary.Status) %>%
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(Race, n, fill=Primary.Status)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
dummy_data <- read.csv('../data/dem_with_dummies.csv', stringsAsFactors = FALSE)
View(dummy_data
View(dummy_data)
View(dummy_data)
multiple = smf.ols('Primary.Status_Advanced ~ Yes.Endorsements + Office.Type_Governor ', data=dummy_data).fit()
multiple = smf.ols('Primary.Status_Advanced ~ Yes.Endorsements + Office.Type_Governor', data=dummy_data).fit()
multiple = smf.ols('Primary.Status_Advanced ~ Yes.Endorsements + Office.Type_Governor', data=dummy_data)
